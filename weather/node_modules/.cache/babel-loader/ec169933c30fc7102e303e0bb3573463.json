{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\HelloReact\\\\React-weather-demo\\\\weather\\\\src\\\\components\\\\WeatherScreen.js\",\n    _s = $RefreshSig$();\n\nimport WeatherService from \"../services/OpenWeatherMapService\";\nimport Forecast from \"../models/Forecast\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction WeatherScreen() {\n  _s();\n\n  // useEffect(()=>{\n  //     //NOTE this effect is executed on page load\n  //     updateForecast();\n  // })\n  //NOTE forecastData is a state\n  //NOTE setForecastData is a state upade function\n  let [state, setState] = useState({\n    forecastData: new Forecast(),\n    cityName: 'Sibiu'\n  });\n\n  function updateForecast() {\n    //NOTE city name should be taken as a ui input\n    WeatherService.GetForecast(cityName).then(result => {\n      let forecast = new Forecast(result);\n      setForecastData(forecast);\n    }).then(cast => console.dir(cast)).catch(error => console.error(error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Weather report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateForecast,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [forecastData.country, \" \", forecastData.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: forecastData.condition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Min: \", forecastData.min]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Max: \", forecastData.max]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Feels like: \", forecastData.feel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wind speed: \", forecastData.windSpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Visibility: \", forecastData.visibility]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} //NOTE don't forget to export the function component so it can be imported in another file\n\n\n_s(WeatherScreen, \"pTeV0MgY5pbk/6soEyBPqXPPN6Q=\");\n\n_c = WeatherScreen;\nexport default WeatherScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherScreen\");","map":{"version":3,"sources":["C:/Workspace/HelloReact/React-weather-demo/weather/src/components/WeatherScreen.js"],"names":["WeatherService","Forecast","useState","WeatherScreen","state","setState","forecastData","cityName","updateForecast","GetForecast","then","result","forecast","setForecastData","cast","console","dir","catch","error","country","city","condition","min","max","feel","windSpeed","visibility"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,mCAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB;AACA;AACA;AACA;AAEA;AACA;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AAC7BI,IAAAA,YAAY,EAAE,IAAIL,QAAJ,EADe;AAE7BM,IAAAA,QAAQ,EAAE;AAFmB,GAAD,CAAhC;;AAKA,WAASC,cAAT,GAA0B;AACtB;AACAR,IAAAA,cAAc,CAACS,WAAf,CAA2BF,QAA3B,EACKG,IADL,CACWC,MAAM,IAAI;AACb,UAAIC,QAAQ,GAAG,IAAIX,QAAJ,CAAaU,MAAb,CAAf;AACAE,MAAAA,eAAe,CAACD,QAAD,CAAf;AACH,KAJL,EAKKF,IALL,CAKWI,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CALnB,EAMKG,KANL,CAMYC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAcA,KAAd,CANrB;AAOH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEV,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,iBAAIF,YAAY,CAACa,OAAjB,OAA2Bb,YAAY,CAACc,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAId,YAAY,CAACe;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,0BAASf,YAAY,CAACgB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,0BAAShB,YAAY,CAACiB,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,iCAAgBjB,YAAY,CAACkB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,iCAAgBlB,YAAY,CAACmB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,iCAAgBnB,YAAY,CAACoB,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAaH,C,CAED;;;GAvCSvB,a;;KAAAA,a;AAwCT,eAAeA,aAAf","sourcesContent":["import WeatherService from \"../services/OpenWeatherMapService\";\r\nimport Forecast from \"../models/Forecast\";\r\nimport { useState } from \"react\";\r\n\r\nfunction WeatherScreen() {\r\n    // useEffect(()=>{\r\n    //     //NOTE this effect is executed on page load\r\n    //     updateForecast();\r\n    // })\r\n\r\n    //NOTE forecastData is a state\r\n    //NOTE setForecastData is a state upade function\r\n    let [state, setState] = useState({\r\n        forecastData: new Forecast(),\r\n        cityName: 'Sibiu'\r\n    });\r\n\r\n    function updateForecast() {\r\n        //NOTE city name should be taken as a ui input\r\n        WeatherService.GetForecast(cityName)\r\n            .then( result => {\r\n                let forecast = new Forecast(result)\r\n                setForecastData(forecast)\r\n            })\r\n            .then( cast => console.dir(cast))\r\n            .catch( error => console.error(error) );            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Weather report</h3>\r\n            <button onClick={updateForecast}>Update</button>\r\n            <p>{forecastData.country} {forecastData.city}</p>\r\n            <p>{forecastData.condition}</p>\r\n            <p>Min: {forecastData.min}</p>\r\n            <p>Max: {forecastData.max}</p>\r\n            <p>Feels like: {forecastData.feel}</p>\r\n            <p>Wind speed: {forecastData.windSpeed}</p>\r\n            <p>Visibility: {forecastData.visibility}</p>\r\n        </>\r\n    );\r\n}\r\n\r\n//NOTE don't forget to export the function component so it can be imported in another file\r\nexport default WeatherScreen;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}